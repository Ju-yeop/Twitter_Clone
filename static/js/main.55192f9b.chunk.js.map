{"version":3,"sources":["fbase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","auth","dbService","firestore","storageService","storage","Profile","_ref","refreshUser","userObj","_useState","useState","displayName","_useState2","Object","slicedToArray","profileName","setprofileName","onSubmit","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","event","wrap","_context","prev","next","preventDefault","updateProfile","currentUser","stop","_x","apply","this","arguments","history","useHistory","getMyTweets","_ref3","_callee2","_context2","collection","where","uid","orderBy","get","sent","docs","map","each","console","log","data","useEffect","react_default","createElement","className","autoFocus","type","value","placeholder","required","onChange","target","style","marginTop","onClick","signOut","push","AuthForm","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","newAccount","setNewAccount","_useState7","_useState8","error","setError","_event$target","name","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","t0","message","Fragment","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","index_es","icon","faTwitter","color","size","marginBottom","components_AuthForm","faGoogle","faGithub","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","doc","concat","id","update","deleteClick","window","confirm","delete","refFromURL","attachmentUrl","toggleEditing","src","faTrash","faPencilAlt","TweetFactory","attachment","setAttachment","tweet","setTweet","attachmentRef","response","abrupt","ref","child","uuidv4","putString","getDownloadURL","createAt","Date","now","creatorId","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","alt","backgroundImage","faTimes","Home","tweets","setTweets","onSnapshot","snapshot","tweetArray","objectSpread","components_TweetFactory","components_Tweet","key","Navigation","display","justifyContent","react_router_dom","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","components_Navigation","react_router","maxWidth","width","margin","exact","path","routes_Home","routes_Auth","App","setIsLoggedIn","init","setInit","setUserObj","onAuthStateChanged","user","Router","getFullYear","ReactDOM","render","StrictMode","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.55192f9b.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/firestore\";\r\nimport \"firebase/compat/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","/* eslint-disable import/no-anonymous-default-export */\r\nimport { authService, dbService } from \"../fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { updateProfile } from \"firebase/auth\";\r\n\r\nexport default ({refreshUser, userObj}) => {\r\n    let tweets = {}\r\n    const [profileName, setprofileName] = useState(userObj.displayName);\r\n    const onChange = (event) => {\r\n        const {target:{value}} = event;\r\n        setprofileName(value);\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== profileName){\r\n            await updateProfile(authService.currentUser, {\r\n                displayName: profileName\r\n            })\r\n            refreshUser();\r\n        }\r\n    }\r\n    const history = useHistory();\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n        refreshUser();\r\n    };\r\n    const getMyTweets = async() => {\r\n        tweets = await dbService.collection(\"tweets\")\r\n        .where(\"creatorId\", \"==\", userObj.uid)\r\n        .orderBy(\"createAt\")\r\n        .get()\r\n        tweets.docs.map((each) => console.log(each.data()))\r\n    }\r\n    useEffect(() => {\r\n        getMyTweets();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input className=\"formInput\" autoFocus type=\"text\" value={profileName} placeholder=\"Profile Name\" required onChange={onChange}/>\r\n                <input\r\n                type=\"submit\"\r\n                value=\"Update Profile\"\r\n                className=\"formBtn\"\r\n                style={{\r\n                    marginTop: 10,\r\n                }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>Log Out</span>\r\n        </div>\r\n    );\r\n};","import { createUserWithEmailAndPassword, getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"email\"){\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try{\r\n            let data;\r\n            const auth = getAuth();\r\n            if (newAccount){\r\n                data = await createUserWithEmailAndPassword(auth, email, password);\r\n            } else {\r\n                data = await signInWithEmailAndPassword(auth, email, password);\r\n            }\r\n            console.log(data);\r\n        } catch(error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return(\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input className=\"authInput\" name=\"email\" type=\"text\" placeholder=\"Email\" required value={email} onChange={onChange}/>\r\n                <input className=\"authInput\" name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange}/>\r\n                <input className=\"authInput authSubmit\" type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"}/>\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n        <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Sign In\" : \"Create Account\"}</span>\r\n        </>\r\n    )\r\n}\r\nexport default AuthForm;","import { authService } from \"../fbase\";\r\nimport {GithubAuthProvider,\r\n        GoogleAuthProvider} from \"firebase/auth\";\r\nimport AuthForm from \"../components/AuthForm\";\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faTwitter,\r\n    faGoogle,\r\n    faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {target:{name}} = event;\r\n        let provider;\r\n        if(name === \"google\"){\r\n            provider = new GoogleAuthProvider();\r\n        } else if (name === \"github\"){\r\n            provider = new GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n        console.log(data)\r\n    }   \r\n    return(\r\n        <div className=\"authContainer\">\r\n        <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n        />\r\n        <AuthForm />\r\n        <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n            Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n            Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Auth;","import React from \"react\";\r\nimport { dbService, storageService } from \"../fbase\";\r\nimport { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Tweet = ({tweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newTweet, setNewTweet] = useState(tweetObj.text);\r\n    const onChange = (event) => {\r\n        const {target:{value}} = event;\r\n        setNewTweet(value);\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`tweets/${tweetObj.id}`).update({\r\n            text:newTweet\r\n        })\r\n        setEditing(false);\r\n    }\r\n    const deleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n        if (ok){\r\n            await dbService.doc(`tweets/${tweetObj.id}`).delete();\r\n            await storageService.refFromURL(tweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    return(\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input value={newTweet} placeholder=\"Edit your Tweet\" type=\"text\" required onChange={onChange} autoFocus className=\"formInput\"/>\r\n                        <input className=\"formBtn\" value=\"Update Tweet\" type=\"submit\" />\r\n                    </form>\r\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">Cancel</span>\r\n                </> ):(\r\n                <>\r\n                    <div>\r\n                        <h4>{tweetObj.text}</h4>\r\n                        {tweetObj.attachmentUrl && <img src={tweetObj.attachmentUrl} />}\r\n                        {isOwner && (\r\n                            <div className=\"nweet__actions\">\r\n                                <span onClick={deleteClick}>\r\n                                    <FontAwesomeIcon icon={faTrash} />\r\n                                </span>\r\n                                <span onClick={toggleEditing}>\r\n                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                </span>\r\n                            </div>\r\n                        )}\r\n                    </div> \r\n                </>)\r\n            }\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Tweet;","import { dbService, storageService } from \"../fbase\";\r\nimport React, { useState } from \"react\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst TweetFactory = ({userObj}) => {\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const [tweet, setTweet] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {target:{value}} = event;\r\n        setTweet(value);\r\n    }\r\n    const onSubmit = async (event) => {\r\n        if (tweet === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\"\r\n        if (attachment !== \"\"){\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const tweetObj = {\r\n            text:tweet,\r\n            createAt:Date.now(),\r\n            creatorId:userObj.uid,\r\n            attachmentUrl\r\n        }\r\n        await dbService.collection(\"tweets\").add(tweetObj)\r\n        setTweet(\"\");\r\n        setAttachment(\"\");\r\n    }\r\n    const onFileChange = (event) => {\r\n        const {target:{files}} = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {currentTarget:{result}} = finishedEvent;\r\n            setAttachment(result);\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n    return(\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n            <input\r\n                className=\"factoryInput__input\"\r\n                value={tweet}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"What's on your mind?\"\r\n                maxLength={120}\r\n            />\r\n            <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        alt={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    )\r\n};\r\nexport default TweetFactory;","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { dbService } from \"../fbase\";\r\nimport Tweet from \"../components/Tweet\";\r\nimport TweetFactory from \"../components/TweetFactory\";\r\n\r\n\r\nconst Home = ({userObj}) => {\r\n    const [tweets, setTweets] = useState([]);\r\n    /*const getTweets = async () => {\r\n        const dbTweets = await dbService.collection(\"tweets\").get();\r\n        dbTweets.forEach((document) => {\r\n            const tweetObject = {\r\n                ...document.data(),\r\n                id:document.id\r\n            }\r\n            setTweets((prev) => [tweetObject, ...prev])\r\n        })\r\n    }*/\r\n    useEffect(() => {\r\n        dbService.collection(\"tweets\").onSnapshot((snapshot) => {\r\n            const tweetArray = snapshot.docs.map((doc) => ({\r\n                id:doc.id,\r\n                ...doc.data()\r\n            }));\r\n            setTweets(tweetArray);\r\n        })\r\n    }, []);\r\n    return (\r\n        <div className=\"container\">\r\n            <TweetFactory userObj={userObj}/>\r\n            <div style={{ marginTop: 30 }}>\r\n                {tweets.map((tweet) => (\r\n                    <Tweet key={tweet.id} tweetObj={tweet} isOwner={tweet.creatorId === userObj.uid}/>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Home;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({userObj}) => (\r\n    <nav>\r\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n            <li>\r\n                <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link\r\n                    to=\"/profile\"\r\n                    style={{\r\n                        marginLeft: 10,\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                        fontSize: 12,\r\n                    }}\r\n                >\r\n                    <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n)\r\nexport default Navigation;","import React from \"react\";\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\"\r\nimport Profile from \"../routes/Profile\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn , userObj}) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj}/>}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                <div\r\n                style={{\r\n                    maxWidth: 890,\r\n                    width: \"100%\",\r\n                    margin: \"0 auto\",\r\n                    marginTop: 80,\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    }}\r\n                >\r\n                    <Route exact path=\"/\">\r\n                        <Home userObj={userObj}/>\r\n                    </Route>\r\n                    <Route exact path=\"/profile\">\r\n                        <Profile refreshUser={refreshUser} userObj={userObj}/>\r\n                    </Route>\r\n                </div>\r\n            ) : (\r\n                <Route exact path=\"/\">\r\n                    <Auth/>\r\n                </Route>\r\n            )}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from \"react\"\nimport AppRouter from \"./Router\";\nimport {authService} from \"../fbase\";\nimport {getAuth, onAuthStateChanged, updateProfile} from \"firebase/auth\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    const auth = getAuth();\n    onAuthStateChanged(auth, (user) => {\n      if (user){\n        setIsLoggedIn(true);\n        const uid = user.uid;\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: updateProfile(user, { displayName: user.displayName })\n        })\n      } else {\n        setIsLoggedIn(false);\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: updateProfile(user, { displayName: user.displayName })\n    })\n  }\n  return (\n    <>\n      {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={isLoggedIn} userObj={userObj}/> : \"Initializing...\"}\n      <footer>&copy; {new Date().getFullYear()} Twitter</footer>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}